#!/usr/bin/env python

import argparse
import json
import os
import urllib2

parser = argparse.ArgumentParser(description='Process some integers.', add_help=True)

parser.add_argument('urlish')
parser.add_argument('--commit-tag')
parser.add_argument('--branch')
parser.add_argument('--before-build', type=int)
parser.add_argument('--circle-token')

args = parser.parse_args()

token = args.circle_token or os.environ['CIRCLE_TOKEN']

url = "https://circleci.com/api/v1/project/%s?circle-token=%s&limit=10" % \
      (args.urlish, token)

req = urllib2.Request(url, None, {"Accept": "application/json"})

resp = urllib2.urlopen(req)

builds = json.load(resp)

# Some test data:
# builds = [{'status': 'running', 'subject': 'foo [bar]', 'branch': 'master', 'build_num': 5},
#           {'status': 'running', 'subject': 'foo [bar]', 'branch': 'master', 'build_num': 6},
#           {'status': 'running', 'subject': 'foo [barz]', 'branch': 'master', 'build_num': 5},
#           {'status': 'finished', 'subject': 'foo [bar]', 'branch': 'master', 'build_num': 5},
#           {'status': 'running', 'subject': 'foo [bar]', 'branch': 'foo', 'build_num': 5}]

def filter_status(build):
    return build['status'] in {'queued', 'scheduled', 'running'}

def filter_branch(build):
    return not args.branch or build['branch'] == args.branch

def filter_tag(build):
    return not args.commit_tag or "[%s]" % args.commit_tag in build['subject']

def filter_num(build):
    return not args.before_build or build['build_num'] < args.before_build

def filter_build(b):
    return filter_status(b) and filter_branch(b) and filter_tag(b) and filter_num(b)

for build_num in [build['build_num'] for build in builds if filter_build(build)]:
    print build_num
